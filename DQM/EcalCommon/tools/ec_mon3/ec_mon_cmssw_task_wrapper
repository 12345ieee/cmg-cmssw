#!/usr/bin/env perl

use strict "vars";
use vars qw( %opts );
use vars qw( %config );

use Getopt::Long;

Getopt::Long::config('bundling_override');
%opts = ();
GetOptions( \%opts,
                "run|r=s",
                "file|f=s",
                "help|h"
);
usage() if ( $opts{'help'} || $Getopt::Long::error );

my $runnum = $opts{'run'};
my $filnam = $opts{'file'};

usage() if ( ! $runnum && ! $filnam );

use File::Basename;

unshift(@INC, dirname($0));
require "ec_mon_utils.pl";

ec_mon_conf_file();

my ($loc, $num, $lun, $out, $fun, $fil, $ful) = split('\.', $runnum);

my $daqdir = "$config{'ec_mon_master_rundir'}/daq-data";
my $trashdir = "$config{'ec_mon_master_rundir'}/daq-data/trash";

my $command = ec_mon_filelist("$daqdir/", $num, $fun);

my @filelist = split('\n', `$command`);

$command = ec_mon_filelist("$trashdir/", $num, $fun);

my @filelist_archived = split('\n', `$command`);

if ( $runnum ) {
  exit 1 unless ( @filelist != 0 ||
                  @filelist_archived != 0 );
}

if ( $filnam ) {
  if ( -e "$filnam" ) {
    $runnum = basename($filnam);
  } else {
    print "file: $filnam does not exist ...\n";
    exit 1;
  }
}

my $cmssw_arch;
my $cmssw_setup;
my $cmssw_path;

if ( $config{'ec_mon_path'} =~ /localDAQ/ ) {
  $cmssw_arch = "slc5_amd64_gcc461";
  $cmssw_setup = "/nfshome0/cmssw2/scripts/setup.sh";
  $cmssw_path = "/nfshome0/ecalpro/DQM/CMSSW_5_0_1_patch2";
}

if ( $config{'ec_mon_path'} =~ /globalDAQ/ ) {
  $cmssw_arch = "slc5_amd64_gcc461";
  $cmssw_setup = "/nfshome0/cmssw2/scripts/setup.sh";
  $cmssw_path = "/nfshome0/ecalpro/DQM/CMSSW_5_0_1_patch2";
}

if ( @filelist != 0 && $filelist[0] =~ /^Minidaq/ ) {
  $cmssw_arch = "slc5_amd64_gcc461";
  $cmssw_setup = "/nfshome0/cmssw2/scripts/setup.sh";
  $cmssw_path = "/nfshome0/ecalpro/DQM/CMSSW_5_0_1_patch2";
}

exit 1 unless ( -e "$cmssw_path" );

my $task;

my $workdir = "$config{'ec_mon_master_rundir'}/dqm-data/tmp";
my $cfgfile = "$workdir/monitor-$runnum.py";

if ( -e $cfgfile ) {
  system("rm -f $cfgfile >> /dev/null 2>&1");
}

my $environment;
my $cfgtype;

if ( $config{'ec_mon_path'} =~ /localDAQ/ ) {
    $environment = 'LocalDAQ';
    $cfgtype = 'Calibration';
}
elsif ( $config{'ec_mon_path'} =~ /globalDAQ/ ) {
    $environment = 'PrivQuasiLive';
    if ( @filelist != 0 && $filelist[0] =~ /^Minidaq/ ) {
	$cfgtype = 'Calibration';
    }
    else {
	$cfgtype = 'Physics';
    }
}

my $sourceFiles;
if ( $filnam ) {
    $sourceFiles = $filnam;
}
elsif ( @filelist != 0 ) {
    for (my $i = 0; $i < @filelist; $i++) {
	$sourceFiles = "$sourceFiles$daqdir/$filelist[$i] ";
    }
}
elsif ( @filelist_archived != 0 ) {
    for (my $i = 0; $i < @filelist; $i++) {
	$sourceFiles = "$sourceFiles$trashdir/$filelist_archived[$i] ";
    }
}
else {
  exit 1;
}

system("python ~ecalpro/DQM/tools/ecalConfigBuilder.py -e $environment -c $cfgtype -f $cfgfile --source='$sourceFiles'");

$task = "export SCRAM_ARCH=$cmssw_arch ; source $cmssw_setup ; cd $cmssw_path ; eval `scramv1 runtime -sh` ; cd $workdir ; time cmsRun $cfgfile";

my $logdir = "$config{'ec_mon_master_rundir'}/dqm-data/logs";
my $logfile = "$logdir/$runnum.cmssw.log";

if ( -e $logfile ) {
  system("rm -f $logfile >> /dev/null 2>&1");
}

my $status = system("($task) > $logfile 2>&1");

system("mv -f $cfgfile $logdir/ >> /dev/null 2>&1");

system("mv -f $workdir/DQM_*_R0$num.root $config{'ec_mon_master_rundir'}/dqm-data/root/ >> /dev/null 2>&1");

exit $status >> 8;

############################################################################

sub usage {
  print STDERR <<INLINE_LITERAL_TEXT;
usage: ec_mon_cmssw_task_wrapper [ --run <run_number> | --file /pathname/filename ]
INLINE_LITERAL_TEXT

  exit;
}
