#!/usr/bin/env perl

use strict "vars";
use vars qw( %opts );
use vars qw( %config );

use Getopt::Long;

Getopt::Long::config('bundling_override');
%opts = ();
GetOptions( \%opts,
                "run|r=s",
                "file|f=s",
                "help|h"
);
usage() if ( $opts{'help'} || $Getopt::Long::error );

my $runnum = $opts{'run'};
my $filnam = $opts{'file'};

usage() if ( ! $runnum && ! $filnam );

use File::Basename;

unshift(@INC, dirname($0));
require "ec_mon_utils.pl";

ec_mon_conf_file();

my @filelist;

if ($filnam) {
    if ( -e "$filnam" ) {
	@filelist = qw($filnam);
    } else {
	print "file: $filnam does not exist ...\n";
	exit 1;
    }
}
else {
    my ($loc, $num, $lun, $out, $fun, $fil, $ful) = split('\.', $runnum);

    my $daqdir = "$config{'ec_mon_master_rundir'}/daq-data";
    my $trashdir = "$config{'ec_mon_master_rundir'}/daq-data/trash";

    @filelist = map {"$daqdir/" . $_} split('\n', ec_mon_filelist("$daqdir/", $num, '', 1));

    if (@filelist == 0){
	@filelist = map {"$trashdir/" . $_} split('\n', ec_mon_filelist("$trashdir/", $num, '', 1));
    }
}

exit 1 unless ( @filelist != 0 );

if ($config{'ec_mon_era'} eq '') {
    open LOGFILE, ">>$config{'ec_mon_master_rundir'}/dqm-data/$config{'ec_mon_master_log'}";
    print LOGFILE localtime()." - ec_mon_cmssw_task_wrapper: no era defined; cannot set workflow.\n";
    close LOGFILE;    
    exit 1;
}

my $cmsenv;
my $daq;
my $workflow;

if ( $filelist[0] =~ /Minidaq/ ) {
    $cmsenv = "/nfshome0/ecalpro/DQM/swconf/cmsenv.miniDAQ";
    $daq = 'globalDAQ';
    $workflow = "/All/$config{'ec_mon_era'}/MiniDAQ";
}
elsif ( $config{'ec_mon_path'} =~ /localDAQ/ ) {
    $cmsenv = "/nfshome0/ecalpro/DQM/swconf/cmsenv.localDAQ";
    $daq = 'localDAQ';
    $workflow = "/All/$config{'ec_mon_era'}/LocalDAQ";
}
elsif ( $config{'ec_mon_path'} =~ /globalDAQ/ ) {
    $cmsenv = "/nfshome0/ecalpro/DQM/swconf/cmsenv.globalDAQ";
    $daq = 'globalDAQ';
    $workflow = "/All/$config{'ec_mon_era'}/CentralDAQ";
}
else {
    exit 1;
}

my $workdir = "$config{'ec_mon_master_rundir'}/dqm-data/tmp";

my $tooldir = "/nfshome0/ecalpro/DQM/tools";

foreach my $file (@filelist) {

    my $name = basename($file, ".dat");

    my ($loc, $num, $lun, $out, $fun, $fil, $ful) = split('\.', $name);

    my $cfgtype;

    if ( $config{'ec_mon_path'} =~ /localDAQ/ || $out eq 'Calibration' ) {
	$cfgtype = 'Calibration';
    }
    else {
	$cfgtype = 'Physics';
    }

    my $cfgfile = "$workdir/monitor-$name.py";

    if ( -e $cfgfile ) {
	system("rm -f $cfgfile >> /dev/null 2>&1");
    }

    my $task = "source $cmsenv; python $tooldir/ecalConfigBuilder.py $dbflag -e PrivOffline -c $cfgtype -d $daq -w '$workflow' -f $cfgfile -s '$file' -g " . '"$globaltag"' . "; cd $workdir; time cmsRun $cfgfile";

    my $logdir = "$config{'ec_mon_master_rundir'}/dqm-data/logs";
    my $logfile = "$logdir/$name.cmssw.log";

    if ( -e $logfile ) {
	system("rm -f $logfile >> /dev/null 2>&1");
    }

    if(system("($task) > $logfile 2>&1") != 0 || system("mv -f $cfgfile $logdir/ >> /dev/null 2>&1") != 0) {
	exit 1;
    }

    my $outputname = "DQM_V0001_R0" . $num . "$workflow.root";
    $outputname =~ s/\//__/g;

    system("mv -f $workdir/$outputname $config{'ec_mon_master_rundir'}/dqm-data/root/ >> /dev/null 2>&1");

}

exit 0;

############################################################################

sub usage {
  print STDERR <<INLINE_LITERAL_TEXT;
usage: ec_mon_cmssw_task_wrapper [ --run <run_number> | --file /pathname/filename ]
INLINE_LITERAL_TEXT

  exit;
}
