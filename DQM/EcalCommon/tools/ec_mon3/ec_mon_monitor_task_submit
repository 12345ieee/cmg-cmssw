#!/usr/bin/env perl

use strict "vars";
use vars qw( %opts );
use vars qw( %config );

use Getopt::Long;

Getopt::Long::config('bundling_override');
%opts = ();
GetOptions( \%opts,
                "conf|c=s",
                "debug|d",
                "help|h"
);
usage() if ( $opts{'help'} || $Getopt::Long::error );

use File::Basename;

unshift(@INC, dirname($0));
require "ec_mon_utils.pl";

ec_mon_conf_file();

my @daq_done;
my @mon_run;

if ( @ARGV ) {
  @daq_done = split('\n', `$config{'ec_mon_path'}/ec_mon_check --nocolor --short --daq_done --reverse --conf $config{'$ec_mon_conf'} @ARGV`);
  @mon_run = split('\n', `$config{'ec_mon_path'}/ec_mon_check --nocolor --short --mon_run --reverse --conf $config{'$ec_mon_conf'} @ARGV`);
} else {
  @daq_done = split('\n', `$config{'ec_mon_path'}/ec_mon_check --nocolor --short --daq_done --reverse --conf $config{'$ec_mon_conf'}`);
  @mon_run = split('\n', `$config{'ec_mon_path'}/ec_mon_check --nocolor --short --mon_run --reverse --conf $config{'$ec_mon_conf'}`);
}

my $running = @mon_run;

if ( $running >= $config{'ec_mon_master_max_jobs_running'} ) {

  print "Too many monitoring tasks running.\n" if ( $opts{'debug'} );

  open LOGFILE, ">>$config{'ec_mon_master_rundir'}/dqm-data/$config{'ec_mon_master_log'}";
  print LOGFILE localtime()." - ec_mon_monitor_task_submit: too many monitoring tasks running.\n";
  close LOGFILE;

  exit 0;

}

my $run;

foreach $run ( @daq_done ) {

  $run =~ s/ *$//;

  print "Forking monitoring task for run $run\n";

  open LOGFILE, ">>$config{'ec_mon_master_rundir'}/dqm-data/$config{'ec_mon_master_log'}";
  print LOGFILE localtime()." - ec_mon_monitor_task_submit: forking monitoring task for run $run\n";
  close LOGFILE;

  $running += 1;

  if ( -e "$ENV{'HOME'}/utils/launchOnCluster.py" ) {

    system("$ENV{'HOME'}/utils/launchOnCluster.py $config{'ec_mon_path'}/ec_mon_monitor_task_wrapper --run $run >> /dev/null 2>&1 &");

  } else {

    system("$config{'ec_mon_path'}/ec_mon_monitor_task_wrapper --run $run >> /dev/null 2>&1 &");

  }

  if ( $running >= $config{'ec_mon_master_max_jobs_running'} ) {
    exit 0;
  }

  sleep 10;
}

exit 0;

############################################################################

sub usage {

  print STDERR <<INLINE_LITERAL_TEXT;
usage: ec_mon_monitor_task_submit [options] [run1#run2]

If a run range is not specified ec_mon_monitor_task_submit will look through all available
runs.

Options are:
  --conf   Needs a path name to use a ec_mon.conf from a location other
           than the current directory

  --debug
INLINE_LITERAL_TEXT

  exit;
}

############################################################################

