#!/usr/bin/env perl -w

use strict "vars";
use vars qw( %opts );
use vars qw( %config );

use Getopt::Long;

Getopt::Long::config('bundling_override');
%opts = ();
GetOptions( \%opts,
                "conf|c=s",
                "debug|d",
                "help|h"
);
usage() if ( $opts{'help'} || $Getopt::Long::error );

use File::Basename;

unshift(@INC, dirname($0));
require "ec_mon_utils.pl";

ec_mon_conf_file();

my $ec_mon_master_sleep_time = 15;

if ( -e "$config{'ec_mon_master_rundir'}/dqm-data/.ec_mon_master_run$config{'ec_mon_master_name'}" ) {
  die "Error: ec_mon_master appears to be running on the system somewhere.\n";
}

my $hostname = `hostname -s`;
chomp $hostname;

open LOGFILE, ">>$config{'ec_mon_master_rundir'}/dqm-data/$config{'ec_mon_master_log'}";
print LOGFILE localtime()." - ec_mon_master$config{'ec_mon_master_name'}: starting services on $hostname.\n";
close LOGFILE;

system("touch $config{'ec_mon_master_rundir'}/dqm-data/.ec_mon_master_run$config{'ec_mon_master_name'}");

my $ec_mon_master_did_something;

while ( $config{'ec_mon_master_runcontrol'} > 0 ) {

  open LOGFILE, ">>$config{'ec_mon_master_rundir'}/dqm-data/$config{'ec_mon_master_log'}";
  print LOGFILE localtime()." - ec_mon_master$config{'ec_mon_master_name'}: monitoring the system.\n";
  close LOGFILE;

  if ( $config{'ec_mon_master_runcontrol'} > 1 ) {
    $ec_mon_master_did_something = ec_mon_master_submit_runs();
  }

  if ( $ec_mon_master_did_something ) {
    $ec_mon_master_sleep_time = 30;
  } else {
    my $ec_mon_master_add_time = 0;
    if ( $ec_mon_master_sleep_time < 60 ) {
      $ec_mon_master_add_time += 15;
    } elsif ( $ec_mon_master_sleep_time >=  60 && $ec_mon_master_sleep_time < 120 ) {
      $ec_mon_master_add_time += 20;
    } elsif ( $ec_mon_master_sleep_time >= 120 && $ec_mon_master_sleep_time < 240 ) {
      $ec_mon_master_add_time += 40;
    } elsif ( $ec_mon_master_sleep_time >= 240 && $ec_mon_master_sleep_time < 360 ) {
      $ec_mon_master_add_time += 60;
    }
    $ec_mon_master_sleep_time += $ec_mon_master_add_time;
  }

  if ( $config{'ec_mon_master_runcontrol'} > 1 ) {
    ec_mon_master_archive_runs() if ( $config{'ec_mon_archive_dir'} ne '' );
  }

  print "Sleep for $ec_mon_master_sleep_time seconds\n" if ( $opts{'debug'} );
  sleep $ec_mon_master_sleep_time;

  ec_mon_conf_file();
}

open LOGFILE, ">>$config{'ec_mon_master_rundir'}/dqm-data/$config{'ec_mon_master_log'}";
print LOGFILE localtime()." - ec_mon_master$config{'ec_mon_master_name'}: shutting down.\n";
close LOGFILE;

unlink "$config{'ec_mon_master_rundir'}/dqm-data/.ec_mon_master_run$config{'ec_mon_master_name'}";

exit 0;

############################################################################

sub ec_mon_master_submit_runs {

  if ( -e "$config{'ec_mon_master_rundir'}/dqm-data/.ec_mon_master_submit$config{'ec_mon_master_name'}" ) {
    my $lastupdate = (stat("$config{'ec_mon_master_rundir'}/dqm-data/.ec_mon_master_submit$config{'ec_mon_master_name'}"))[9];
    return 0 if ( ( time() - $lastupdate ) < $config{'ec_mon_master_submit_wait'} );
  }

  open LOGFILE, ">>$config{'ec_mon_master_rundir'}/dqm-data/$config{'ec_mon_master_log'}";
  print LOGFILE localtime()." - ec_mon_master$config{'ec_mon_master_name'}: submitting monitoring tasks.\n";
  close LOGFILE;

  system("$config{'ec_mon_path'}/ec_mon_monitor_task_submit --conf $config{'$ec_mon_conf'} $config{'ec_mon_master_runrange'} >> /dev/null 2>&1" );

  system("touch $config{'ec_mon_master_rundir'}/dqm-data/.ec_mon_master_submit$config{'ec_mon_master_name'}");

  return 1;
}

sub ec_mon_master_archive_runs {

  if ( -e "$config{'ec_mon_master_rundir'}/dqm-data/.ec_mon_master_archive$config{'ec_mon_master_name'}" ) {
    my $lastupdate = (stat("$config{'ec_mon_master_rundir'}/dqm-data/.ec_mon_master_archive$config{'ec_mon_master_name'}"))[9];
    return 0 if ( ( time() - $lastupdate ) < $config{'ec_mon_master_archive_wait'} );
  }

  open LOGFILE, ">>$config{'ec_mon_master_rundir'}/dqm-data/$config{'ec_mon_master_log'}";
  print LOGFILE localtime()." - ec_mon_master$config{'ec_mon_master_name'}: archiving old runs.\n";
  close LOGFILE;

  system("$config{'ec_mon_path'}/ec_mon_archive --conf $config{'$ec_mon_conf'} $config{'ec_mon_master_runrange'} >> /dev/null 2>&1 &" );

  system("touch $config{'ec_mon_master_rundir'}/dqm-data/.ec_mon_master_archive$config{'ec_mon_master_name'}");

  return 1;
}

############################################################################

sub usage {

  print STDERR <<INLINE_LITERAL_TEXT;
usage: ec_mon_master [options] &

Options are:
  --conf   Needs a path name to use a ec_mon.conf from a location other 
           than the current directory

  --debug
INLINE_LITERAL_TEXT

  exit;
}

############################################################################

