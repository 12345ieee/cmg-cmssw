#!/usr/bin/env perl

use strict "vars";
use vars qw( %opts );
use vars qw( %config );

use Getopt::Long;

Getopt::Long::config('bundling_override');
%opts = ();
GetOptions( \%opts,
                "conf|c=s",
                "debug|d",
                "norun",
                "archive_now",
                "remove_now",
                "move_now",
                "help|h"
);
usage() if ( $opts{'help'} || $Getopt::Long::error );

use File::Basename;

unshift(@INC, dirname($0));
require "ec_mon_utils.pl";

ec_mon_conf_file();

#maximum number of runs to be archived at each cycle
my $archive_maxruns = 20;

#time after which to archive a 'done' run
#my $archive_timeout = 7 * 24 * 60 * 60; #  7 days in secs
#my $archive_timeout = 2 * 24 * 60 * 60; #  2 days in secs
#my $archive_timeout = 1 * 24 * 60 * 60; # 24 hours in secs
#my $archive_timeout = 1 * 12 * 60 * 60; # 12 hours in secs
#my $archive_timeout = 1 *  6 * 60 * 60; #  6 hours in secs
#my $archive_timeout = 1 *  1 * 60 * 60; # 60 minutes in secs
my $archive_timeout = 1 *  1 * 10 * 60; # 10 minutes in secs

$archive_timeout = 0 if ( $opts{'archive_now'} );

#time after which to move an 'archived' run
my $move_timeout = 1 * 24 * 60 * 60; # 24 hours in secs

$move_timeout = 0 if ( $opts{'move_now'} );

#time after which to remove a 'failed' run
my $remove_timeout = 30 * 24 * 60 * 60; #30 days in secs

$remove_timeout = 0 if ( $opts{'remove_now'} );

if ( $config{'ec_mon_archive_dir'} eq '' ) {

  print "ec_mon_archive_dir is not defined !\n";
  exit 1;

}

exit 1 if ( -e "$config{'ec_mon_master_rundir'}/dqm-data/.ec_mon_master_archive_lock$config{'ec_mon_master_name'}" );

system("touch $config{'ec_mon_master_rundir'}/dqm-data/.ec_mon_master_archive_lock$config{'ec_mon_master_name'}");

my @done_runs;
my @failed_runs;

@done_runs = split('\n', `$config{'ec_mon_path'}/ec_mon_check --nocolor --short --mon_done --conf $config{'$ec_mon_conf'} @ARGV`);
@failed_runs = split('\n', `$config{'ec_mon_path'}/ec_mon_check --nocolor --short --daq_fail --daq_abort --daq_empty --mon_fail --conf $config{'$ec_mon_conf'} @ARGV`);

my $runfile;
my $run;

if ( @done_runs == 0 ) {

  print "No runs to archive\n" if ( $opts{'debug'} );

} else {

  my $numruns = 0;

  foreach $runfile ( @done_runs ) {

    my ($loc, $num, $lun, $out, $fun, $fil, $ful) = split('\.', "$runfile");

    my @datfiles = split('\n', `find $config{'ec_mon_master_rundir'}/daq-data/ -name '$loc.$num.*.dat' -printf '%f\n' -maxdepth 1 | sort`);

    foreach $run ( @datfiles ) {

      $run =~ s/.dat//;
      $run =~ s/ *$//;

      print "Checking existence on disk of run $run\n" if ( $opts{'debug'} );

      my $status;

      if ( -e "$config{'ec_mon_master_rundir'}/daq-data/$run.archived" ) {

        open FILE, "<$config{'ec_mon_master_rundir'}/daq-data/$run.archived";
        my $file = <FILE>;
        close FILE;

        print "This run has been already archived\n" if ( $opts{'debug'} );

        if ( -e "$config{'ec_mon_master_rundir'}/daq-data/$run.dat" ) {

          my $update = (stat("$config{'ec_mon_master_rundir'}/daq-data/$run.dat"))[9];
          my $time = ((( time() - $update ) / 60.) / 60.);

          printf "Last updated %.1f hours ago\n", $time if ( $opts{'debug'} );

          if ( ( time() - $update ) > $move_timeout ) {

            print "Moving $config{'ec_mon_master_rundir'}/daq-data/$run.dat and $config{'ec_mon_master_rundir'}/daq-data/$run.ind to $config{'ec_mon_master_rundir'}/daq-data/trash/: " if ( $opts{'debug'} );

            $status = 0;
            $status = system("mv -f $config{'ec_mon_master_rundir'}/daq-data/$run.dat $config{'ec_mon_master_rundir'}/daq-data/$run.ind $config{'ec_mon_master_rundir'}/daq-data/trash/") unless ( $opts{'norun'} );

            if ( ! $status ) {

              print "done\n" if ( $opts{'debug'} );

              open LOGFILE, ">>$config{'ec_mon_master_rundir'}/dqm-data/$config{'ec_mon_master_log'}";
              print LOGFILE localtime()." - ec_mon_archive: moved $config{'ec_mon_master_rundir'}/daq-data/$run.dat and $config{'ec_mon_master_rundir'}/daq-data/$run.ind to $config{'ec_mon_master_rundir'}/daq-data/trash/\n";
              close LOGFILE;

            } else {

              print "failed\n" if ( $opts{'debug'} );

              open LOGFILE, ">>$config{'ec_mon_master_rundir'}/dqm-data/$config{'ec_mon_master_log'}";
              print LOGFILE localtime()." - ec_mon_archive: problems moving $config{'ec_mon_master_rundir'}/daq-data/$run.dat and $config{'ec_mon_master_rundir'}/daq-data/$run.ind to $config{'ec_mon_master_rundir'}/daq-data/trash/\n";
              close LOGFILE;

              system("rm $config{'ec_mon_master_rundir'}/dqm-data/.ec_mon_master_archive_lock$config{'ec_mon_master_name'}");
              exit 1;

            }

          }

        }

      } elsif ( -e "$config{'ec_mon_master_rundir'}/daq-data/$run.dat" ) {

        $numruns++;

        last if ( $numruns > $archive_maxruns );

        print "Found $config{'ec_mon_master_rundir'}/daq-data/$run.dat on disk\n" if ( $opts{'debug'} );

        my $update = (stat("$config{'ec_mon_master_rundir'}/daq-data/$run.dat"))[9];
        my $time = ((( time() - $update ) / 60.) / 60.);

        printf "Last updated %.1f hours ago\n", $time if ( $opts{'debug'} );

        if ( ( time() - $update ) > $archive_timeout ) {

          print "Run $run needs to be saved\n" if ( $opts{'debug'} );

          print "Transferring $config{'ec_mon_master_rundir'}/daq-data/$run.dat and $config{'ec_mon_master_rundir'}/daq-data/$run.ind to $config{'ec_mon_archive_dir'}/\n" if ( $opts{'debug'} );

          $status = 0;
          $status = system("scp -p $config{'ec_mon_master_rundir'}/daq-data/$run.dat $config{'ec_mon_master_rundir'}/daq-data/$run.ind $config{'ec_mon_archive_dir'}/ >> /dev/null 2>&1") unless ( $opts{'norun'} );

          if ( $status ) {

            print "Problems with the transfer of $config{'ec_mon_master_rundir'}/daq-data/$run.dat and $config{'ec_mon_master_rundir'}/daq-data/$run.ind\n";

            open LOGFILE, ">>$config{'ec_mon_master_rundir'}/dqm-data/$config{'ec_mon_master_log'}";
            print LOGFILE localtime()." - ec_mon_archive: problems with the transfer of $config{'ec_mon_master_rundir'}/daq-data/$run.dat and $config{'ec_mon_master_rundir'}/daq-data/$run.ind\n";
            close LOGFILE;

            system("rm $config{'ec_mon_master_rundir'}/dqm-data/.ec_mon_master_archive_lock$config{'ec_mon_master_name'}");
            exit 1;

          }

          unless ( $opts{'norun'} ) {

            open FILE, ">$config{'ec_mon_master_rundir'}/daq-data/$run.archived";
            print FILE "$config{'ec_mon_archive_dir'}/$run.dat\n";
            close FILE;

          }

          print "Archived $config{'ec_mon_master_rundir'}/daq-data/$run.dat as $config{'ec_mon_archive_dir'}/$run.dat\n" if ( $opts{'debug'} );
          print "Archived $config{'ec_mon_master_rundir'}/daq-data/$run.ind as $config{'ec_mon_archive_dir'}/$run.ind\n" if ( $opts{'debug'} );

          open LOGFILE, ">>$config{'ec_mon_master_rundir'}/dqm-data/$config{'ec_mon_master_log'}";
          print LOGFILE localtime()." - ec_mon_archive: archived $config{'ec_mon_master_rundir'}/daq-data/$run.dat as $config{'ec_mon_archive_dir'}/$run.dat\n";
          print LOGFILE localtime()." - ec_mon_archive: archived $config{'ec_mon_master_rundir'}/daq-data/$run.ind as $config{'ec_mon_archive_dir'}/$run.ind\n";
          close LOGFILE;

          if ( -e "$config{'ec_mon_master_rundir'}/dqm-data/status/.$loc.$num.$lun.$out.$fun.$fil.$ful.LASER-STD.mon_done" ) {

            print "Transferring laser run $config{'ec_mon_master_rundir'}/daq-data/$run.dat to LMF\n" if ( $opts{'debug'} );

            $status = 0;
            system("scp -p $config{'ec_mon_master_rundir'}/daq-data/$run.dat ecallaser\@srv-C2D17-19:/localdata/disk0/ecallaser/data/streams/LocalRuns/ >> /dev/null 2>&1") unless ( $opts{'norun'} );

            if ( $status ) {

              print "Problems with the transfer of laser run $config{'ec_mon_master_rundir'}/daq-data/$run.dat to LMF\n";

              open LOGFILE, ">>$config{'ec_mon_master_rundir'}/dqm-data/$config{'ec_mon_master_log'}";
              print LOGFILE localtime()." - ec_mon_archive: problems with the transfer of laser run $config{'ec_mon_master_rundir'}/daq-data/$run.dat to LMF\n";
              close LOGFILE;

              system("rm $config{'ec_mon_master_rundir'}/dqm-data/.ec_mon_master_archive_lock$config{'ec_mon_master_name'}");
              exit 1;

            }

            print "Copied laser run $config{'ec_mon_master_rundir'}/daq-data/$run.dat to LMF\n" if ( $opts{'debug'} );

            open LOGFILE, ">>$config{'ec_mon_master_rundir'}/dqm-data/$config{'ec_mon_master_log'}";
            print LOGFILE localtime()." - ec_mon_archive: copied laser run $config{'ec_mon_master_rundir'}/daq-data/$run.dat to LMF\n";
            close LOGFILE;

          }

        }

      }

    }

  }

}

if ( @failed_runs == 0 ) {

  print "No failed runs to remove\n" if ( $opts{'debug'} );

} else {

  foreach $runfile ( @failed_runs ) {

    my ($loc, $num, $out, $fun, $fil, $typ, $sta) = split('\.', "$runfile");

    my @datfiles = split('\n', `find $config{'ec_mon_master_rundir'}/daq-data/ -name '$loc.$num.*.dat' -printf '%f\n' -maxdepth 1 | sort`);

    foreach $run ( @datfiles ) {

      $run =~ s/.dat//;
      $run =~ s/ *$//;

      print "Checking existence on disk of failed run $run\n" if ( $opts{'debug'} );

      my $status;

      if ( -e "$config{'ec_mon_master_rundir'}/daq-data/$run.dat" ) {

        print "Found failed $config{'ec_mon_master_rundir'}/daq-data/$run.dat on disk\n" if ( $opts{'debug'} );

        my $update = (stat("$config{'ec_mon_master_rundir'}/daq-data/$run.dat"))[9];
        my $time = ((( time() - $update ) / 60.) / 60.);

        printf "Last updated %.1f hours ago\n", $time if ( $opts{'debug'} );

        if ( ( time() - $update ) > $remove_timeout ) {

          print "Failed run $run needs to be removed: " if ( $opts{'debug'} );

          $status = 0;
          $status = system("rm -f $config{'ec_mon_master_rundir'}/daq-data/$run.dat $config{'ec_mon_master_rundir'}/daq-data/$run.ind $config{'ec_mon_master_rundir'}/dqm-data/status/.$run.*") unless ( $opts{'norun'} );

          if ( ! $status ) {

            print "done\n" if ( $opts{'debug'} );

            open LOGFILE, ">>$config{'ec_mon_master_rundir'}/dqm-data/$config{'ec_mon_master_log'}";
            print LOGFILE localtime()." - ec_mon_archive: removed failed run $run\n";
            close LOGFILE;

          } else {

            print "failed\n" if ( $opts{'debug'} );

            open LOGFILE, ">>$config{'ec_mon_master_rundir'}/dqm-data/$config{'ec_mon_master_log'}";
            print LOGFILE localtime()." - ec_mon_archive: problems removing failed run $run\n";
            close LOGFILE;

          }

        }

      }

    }

  }

}

system("rm $config{'ec_mon_master_rundir'}/dqm-data/.ec_mon_master_archive_lock$config{'ec_mon_master_name'}");

exit 0;

############################################################################

sub usage {

        print STDERR <<INLINE_LITERAL_TEXT;
usage: ec_mon_archive [options] [run1#run2]

If a run range is not specified ec_mon_archive will look through all available
runs.

Options are:
  --conf     Needs a path name to use a ec_mon.conf from a location other
             than the current directory.

  --norun    Do not archive and delete the runs, just list what would be done

  --debug
INLINE_LITERAL_TEXT

        exit;
}

############################################################################

