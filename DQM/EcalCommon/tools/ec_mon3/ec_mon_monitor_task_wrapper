#!/usr/bin/env perl

use strict "vars";
use vars qw( %opts );
use vars qw( %config );

use Getopt::Long;

Getopt::Long::config('bundling_override');
%opts = ();
GetOptions( \%opts,
                "run|r=s"
);

my $runnum = $opts{'run'} || usage();

use File::Basename;

unshift(@INC, dirname($0));
require "ec_mon_utils.pl";

ec_mon_conf_file();

my $statusdir = "$config{'ec_mon_master_rundir'}/dqm-data/status";

exit 1 unless ( -e "$statusdir/.$runnum.daq_done" );

my ($loc, $num, $lun, $out, $fun, $fil, $ful, $typ) = split('\.', "$runnum");

my $runfil = "$loc.$num.$lun.$out.$fun.$fil.$ful";

system("mv -f $statusdir/.$runnum.daq_done $statusdir/.$runnum.mon_run");

if ( system("$config{'ec_mon_path'}/ec_mon_cmssw_task_wrapper --run $runfil 2>&1") == 0 || system("$config{'ec_mon_path'}/ec_mon_cmssw_task_wrapper_pedestal-offset --run $runfil 2>&1") == 0 ) {
  system("mv -f $statusdir/.$runnum.mon_run $statusdir/.$runnum.mon_done");
  system("/nfshome0/ecalpro/DAQ/RunTime/common/pilot/scripts/notifyRCMS.pl $num DONE >/tmp/notifyRCMS.log 2>&1");
} else {
  system("mv -f $statusdir/.$runnum.mon_run $statusdir/.$runnum.mon_fail");
  system("/nfshome0/ecalpro/DAQ/RunTime/common/pilot/scripts/notifyRCMS.pl $num FAIL >/tmp/notifyRCMS.log 2>&1");
}

exit 0;

############################################################################

sub usage {
  print "\nthe option --run <run_number> is mandatory !\n\n";
  exit;
}
